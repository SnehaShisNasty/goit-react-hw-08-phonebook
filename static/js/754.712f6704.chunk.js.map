{"version":3,"file":"static/js/754.712f6704.chunk.js","mappings":"uKAMA,IAJqB,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KAEtB,OADAC,QAAQC,IAAIF,IACLG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAAGC,IAAAA,OAAAA,QAAwB,GAADC,OAAIP,KACvC,C,gHCJA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA0F,0BAA1F,EAA6H,2B,SCGvHQ,EAAgB,CACpBC,MAAO,GACPC,SAAU,IA0DZ,EAxDkB,SAAHX,GAAsB,IAAhBY,EAAQZ,EAARY,SACnBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIN,IAAgBO,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAChBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdL,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAO,EAAAA,EAAAA,GAAA,GACPF,EAAOC,IAEZ,EAOQd,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SAETe,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SACnB,OACEE,EAAAA,EAAAA,MAAA,QAAMjB,SAVa,SAAAkB,GACnBA,EAAEC,iBACFnB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,GAChB,EAOgCc,UAAWC,EAAY3B,SAAA,EACnDuB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAO8B,QAASR,EAASM,UAAWC,EAAa3B,SAAC,YAGlDF,EAAAA,EAAAA,KAAA,SACEoB,MAAOd,EACPyB,SAAUf,EACVgB,KAAK,QACLb,KAAK,QACLc,GAAIX,EACJY,UAAQ,EACRN,UAAWC,QAGfJ,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAO8B,QAASN,EAAYI,UAAWC,EAAa3B,SAAC,eAGrDF,EAAAA,EAAAA,KAAA,SACEoB,MAAOb,EACPwB,SAAUf,EACVgB,KAAK,WACLb,KAAK,WACLc,GAAIT,EACJU,UAAQ,EACRN,UAAWC,QAGf7B,EAAAA,EAAAA,KAAA,UAAQgC,KAAK,SAASJ,UAAWC,EAAc3B,SAAC,YAKtD,E,kDC7DA,EAAuB,yBAAvB,EAAwD,0B,UCkCxD,EAtBkB,WAChB,IAAMiC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC5B7C,QAAQC,IAAIyC,GAIZ,OAAIE,GACK1C,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACC,GAAG,iBAGpBpB,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAY3B,SAAA,CAC1BmC,IAAerC,EAAAA,EAAAA,KAAC8C,EAAAA,EAAO,KACxB9C,EAAAA,EAAAA,KAAA,MAAI4B,UAAWC,EAAa3B,SAAC,gBAC7BF,EAAAA,EAAAA,KAAC+C,EAAS,CAACvC,SAVK,SAAAwC,GAClBb,GAASc,EAAAA,EAAAA,IAAMD,GACjB,IASKR,IAAaxC,EAAAA,EAAAA,KAACkD,EAAAA,EAAY,CAACrD,KAAM2C,KAClCxC,EAAAA,EAAAA,KAACmD,EAAAA,GAAM,MAGb,C","sources":["components/Erorr/Erorr.jsx","webpack://react-homework-template/./src/components/LoginForm/login-form.module.css?1212","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LoginPage/login-page.module.css?8795","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ErrorMessage = ({ text }) => {\n  console.log(text);\n  return <>{Notiflix.Notify.failure(`${text}`)}</>;\n};\nexport default ErrorMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"login-form_form__S9chl\",\"label\":\"login-form_label__jgvs-\",\"input\":\"login-form_input__MNXMG\",\"submit\":\"login-form_submit__RS4i2\"};","import React, { useState, useId } from 'react';\n\nimport styles from './login-form.module.css';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n  };\n\n  const { email, password } = state;\n\n  const emailId = useId();\n  const passwordId = useId();\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div>\n        <label htmlFor={emailId} className={styles.label}>\n          Email:\n        </label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n          className={styles.input}\n        />\n      </div>\n      <div>\n        <label htmlFor={passwordId} className={styles.label}>\n          Password:\n        </label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n          className={styles.input}\n        />\n      </div>\n      <button type=\"submit\" className={styles.submit}>\n        Login\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"login-page_main__ujHTS\",\"title\":\"login-page_title__QyttL\"};","import LoginForm from '../../components/LoginForm/LoginForm';\nimport ErrorMessage from 'components/Erorr/Erorr';\nimport { Outlet } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectIsLogin,\n} from '../../redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\nimport styles from './login-page.module.css';\nimport Loading from 'components/Loading/Loading';\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectIsLogin);\n  console.log(authError);\n  const handleLogin = body => {\n    dispatch(login(body));\n  };\n  if (isLogin) {\n    return <Navigate to=\"/phonebooks\" />;\n  }\n  return (\n    <main className={styles.main}>\n      {authLoading && <Loading />}\n      <h1 className={styles.title}>Login Page</h1>\n      <LoginForm onSubmit={handleLogin}></LoginForm>\n      {authError && <ErrorMessage text={authError} />}\n      <Outlet></Outlet>\n    </main>\n  );\n};\nexport default LoginPage;\n"],"names":["_ref","text","console","log","_jsx","_Fragment","children","Notiflix","concat","INITIAL_STATE","email","password","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","name","value","_defineProperty","emailId","useId","passwordId","_jsxs","e","preventDefault","className","styles","htmlFor","onChange","type","id","required","dispatch","useDispatch","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectIsLogin","Navigate","to","Loading","LoginForm","body","login","ErrorMessage","Outlet"],"sourceRoot":""}